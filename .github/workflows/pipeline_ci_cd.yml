name: ci

on:
  push:
    branches:
      - ayoun

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: php:8.2-apache
    steps:
      - name: checkout du code
        uses: actions/checkout@v3

      - name: Install Composer
        run: |
          curl -sS https://getcomposer.org/installer | php
          mv composer.phar /usr/local/bin/composer

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader


  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout du code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Print current directory
        run: pwd

      - name: Check Dockerfile
        run: ls -l

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Check Dockerfile
        run: ls -la

      - name: Debug
        run: |
              pwd
              ls -la

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/ayoun07/Ci-Cd:latest
        
      - name: Send notification to Google Chat
        run: |
          curl -X POST -H "Content-Type: application/json" -d '{
            "text": "Une nouvelle version a été déployée sur `ajouter-un-nouveau-test` !"
          }' https://chat.googleapis.com/v1/spaces/AAAAbk_h9Ic/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=45z-u4OTa1tsHft-HJzUvjcaDyTf4k70Dj3FFjOVnFs